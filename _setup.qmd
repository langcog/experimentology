```{r setup}
#| cache: FALSE

library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(forcats)
library(purrr)
library(ggplot2)
library(ggthemes)
library(glue)
library(knitr)

set.seed(42)

knitr::opts_template$set(
  code = list(echo = TRUE, eval = FALSE)
)

# load font for plots
.font <- "Source Sans Pro"
if (!(.font %in% sysfonts::font_families()))
  sysfonts::font_add_google(.font, .font)
showtext::showtext_auto()

# set custom plot theme
theme_set(theme_bw(base_size = 14, base_family = .font))
theme_update(panel.grid = element_blank(),
             strip.background = element_blank(),
             legend.key = element_blank(),
             panel.border = element_blank(),
             axis.line = element_line(),
             strip.text = element_text(face = "bold"))

# set options for default color and fill scales
options("ggplot2.discrete.colour"   = ggthemes::scale_colour_ptol   )
options("ggplot2.continuous.colour" =  viridis::scale_colour_viridis)
options("ggplot2.discrete.fill"     = ggthemes::scale_fill_ptol     )
options("ggplot2.continuous.fill"   =  viridis::scale_fill_viridis  )

# solarized colors for individual elements (like reference lines)
pal <- list(
  grey   = "#93a1a1",
  red    = "#dc322f",
  blue   = "#268bd2",
  purple = "#6c71c4"
)

# from https://bookdown.org/yihui/rmarkdown-cookbook/font-color.html
colorize <- function(x, color) {
  if (knitr::is_latex_output()) {
    glue("\\textcolor{<color>}{<x>}", .open = "<", .close = ">")
  } else if (knitr::is_html_output()) {
    glue("<span style='color: var(--{stringr::str_sub(color, 2)});'>{x}</span>")
  } else x
}

# arguments to knitr::kable() that make margintables formatted correctly
kargs <- list(format = "latex", longtable = TRUE, booktabs = TRUE, linesep = "")
```
