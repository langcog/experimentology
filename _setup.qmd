```{r}
library(tidyverse)
# library(dplyr)
# library(tidyr)
# library(readr)
# library(forcats)
# library(purrr)
# library(ggplot2)
library(ggthemes)
library(glue)
library(knitr)

set.seed(42)

.font <- "Source Sans Pro"
if (!(.font %in% sysfonts::font_families()))
  sysfonts::font_add_google(.font, .font)
showtext::showtext_auto()

theme_set(theme_bw(base_size = 14, base_family = .font))
theme_update(panel.grid = element_blank(),
             strip.background = element_blank(),
             legend.key = element_blank(),
             panel.border = element_blank(),
             axis.line = element_line(),
             strip.text = element_text(face = "bold"))
.grey <- "grey70"
.refline <- "dotted"
.coef_line <- element_line(colour = .grey, size = 0.1)

.pal <- ptol_pal
.scale_colour_discrete <- scale_colour_ptol
.scale_color_discrete <- .scale_colour_discrete
.scale_fill_discrete <- scale_fill_ptol

.scale_colour_continuous <- viridis::scale_colour_viridis
.scale_color_continuous <- .scale_colour_continuous
.scale_fill_continuous <- viridis::scale_fill_viridis

.scale_colour_numerous <- scale_colour_discrete
.scale_color_numerous <- .scale_colour_numerous
.scale_fill_numerous <- scale_fill_discrete

# from https://bookdown.org/yihui/rmarkdown-cookbook/font-color.html
colorize <- function(x, color) {
  if (knitr::is_latex_output()) {
    sprintf("\\textcolor{%s}{%s}", color, x)
  } else if (knitr::is_html_output()) {
    sprintf("<span style='color: %s;'>%s</span>", color,
            x)
  } else x
}
```

```{r}
appendix <- function(name) {
  suffix <- if (is_html_output()) "html" else if (is_latex_output()) "latex"
  qmd <- glue("{name}-{suffix}.qmd")
  out <- knit_child(qmd, quiet = TRUE)
  cat(out, sep = "\n")
}
```
